resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:
- name: platform-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation

- name: configuration
  type: git
  source:
    uri: git@github.com:doddatpivotal/platform-automation-example.git
    private_key: ((platform_automation_example_git_repo.private_key))
    paths:
    - "environments/((iaas))/((foundation))/harbor-container-registry-pipeline.yml"
    - "environments/((iaas))/((foundation))/config"
jobs:

- name: validate-tile-configuration
  plan:
  - aggregate:
    - get: configuration
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: configuration/proposed-tasks/credhub-interpolate.yml
    params: &credhub_interpolate_params
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
      CREDHUB_CLIENT: concourse_to_credhub
      CREDHUB_SECRET: ((concourse_to_credhub_secret))
      PREFIX: '/((foundation))-foundation'
      INTERPOLATION_PATHS: "environments/((iaas))/((foundation))/config/secrets"
    input_mapping:
      files: configuration

- name: generate-certs
  serial: true
  plan:
  - aggregate:
    - get: configuration
      trigger: true
      passed: [ validate-tile-configuration ]
      params:
        unpack: true
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: configuration/proposed-tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-files
      
  - task: create-certs
    image: platform-automation-image
    config:
      platform: linux
      inputs:
        - name: interpolated-files
      params:
        ENV_FILE: interpolated-files/environments/((iaas))/((foundation))/config/secrets/env.yml
        CORE_DOMAIN: ((core_domain))
        CREDHUB_CLIENT: concourse_to_credhub
        CREDHUB_SECRET: ((concourse_to_credhub_secret))
        CREDHUB_SERVER: ((credhub_server))
        CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
        PREFIX: '/((foundation))-foundation'
      run:
        path: bash
        args:
          - -c
          - |
            p-automator -v
            # set -eux

            curl -L -o jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            chmod +x jq

            DOMAINS="*.$CORE_DOMAIN"
            CERTIFICATE=`om --env "${ENV_FILE}" generate-certificate -d $DOMAINS`
            echo $CERTIFICATE | ./jq ".certificate" -r > server_cert_key.certificate
            echo $CERTIFICATE | ./jq ".key" -r > server_cert_key.private_key
            export OM_VAR_CRED_1_NAME="${PREFIX}/harbor-container-registry/server_cert_key" 
            credhub set -t certificate -n $OM_VAR_CRED_1_NAME -c ./server_cert_key.certificate -p ./server_cert_key.private_key

- name: download-stage-tile-stemcell
  serial: true
  plan:
  - aggregate:
    - get: configuration
      passed: [ generate-certs ]    
      trigger: true
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-files

  - task: download-stage-tile-stemcell
    image: platform-automation-image
    file: configuration/proposed-tasks/download-stage-tile-stemcell.yml
    input_mapping:
      config: configuration
      download-config: configuration
      env: interpolated-files
      secrets: interpolated-files
    params:
      DOWNLOAD_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/harbor-container-registry.yml
      DOWNLOAD_STEMCELL_CONFIG_FILE: environments/((iaas))/((foundation))/config/versions/harbor-container-registry-stemcell.yml
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/harbor-container-registry.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml
      VARS_FILES: secrets/environments/((iaas))/((foundation))/config/secrets/pivnet.yml

- name: configure-and-apply
  serial: true
  plan:
  - aggregate:
    - get: configuration
      passed: [ download-stage-tile-stemcell ]
      trigger: true
    - get: platform-automation-image
      resource: platform-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: platform-automation-tasks
      resource: platform-automation
      params:
        unpack: true
        globs: ["*tasks*"]

  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params: *credhub_interpolate_params
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-files

  - task: configure
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: interpolated-files
      vars: configuration
      secrets: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/harbor-container-registry.yml
      VARS_FILES: |
        vars/environments/((iaas))/((foundation))/config/defaults/harbor-container-registry.yml
        vars/environments/((iaas))/((foundation))/config/vars/harbor-container-registry.yml
        secrets/environments/((iaas))/((foundation))/config/secrets/harbor-container-registry.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

  - task: apply-product-changes
    image: platform-automation-image
    file: configuration/proposed-tasks/apply-product-changes.yml
    attempts: 10
    input_mapping:
      config: configuration
      env: interpolated-files
    params:
      CONFIG_FILE: environments/((iaas))/((foundation))/config/templates/harbor-container-registry.yml
      ENV_FILE: environments/((iaas))/((foundation))/config/secrets/env.yml

