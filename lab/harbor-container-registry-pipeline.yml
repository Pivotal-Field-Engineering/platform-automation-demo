resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tags: latest-final

resources:
- name: pcf-automation
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation

- name: pcf-automation-image-fixes
  type: docker-image
  source:
    repository: cwashburn/platform-automation-fixes

- name: configuration
  type: git
  source:
    uri: git@github.com:doddatpivotal/platform-automation-example.git
    private_key: ((configuration_git_repo.private_key))

jobs:

- name: upload-and-stage-product
  serial: true
  plan:
  - aggregate:
    - get: configuration
      # trigger: true
      params:
        unpack: true
    - get: pcf-automation-image
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: pcf-automation-tasks
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: pcf-automation-image-fixes
  
  - task: credhub-interpolate
    image: pcf-automation-image-fixes
    file: configuration/fixes/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: concourse_to_credhub
      CREDHUB_SECRET: ((concourse_to_credhub_secret))
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
      PREFIX: '/((foundation))-foundation'
      INTERPOLATION_PATH: "((foundation))/config"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: configuration

  - task: download-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/download-product.yml
    input_mapping:
      config: configuration
    params:
      CONFIG_FILE: ((foundation))/config/versions/harbor-container-registry.yml

  - task: upload-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-product.yml
    input_mapping:
      product: downloaded-product
      env: configuration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml

  - task: stage-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/stage-product.yml
    input_mapping:
      product: downloaded-product
      env: configuration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml

  - task: upload-cf-stemcell
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      env: configuration
      stemcell: downloaded-stemcell
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml

  - task: assign-stemcell
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/assign-stemcell.yml
    input_mapping:
      env: configuration
      config: assign-stemcell-config
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml

  - task: configure-product
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: configuration
      env: configuration
      vars: configuration
    params:
      CONFIG_FILE: ((foundation))/config/templates/harbor-container-registry.yml
      VARS_FILES: vars/((foundation))/config/defaults/harbor-container-registry.yml vars/((foundation))/config/vars/harbor-container-registry.yml
      ENV_FILE: ((foundation))/config/templates/env.yml

- name: apply-product-changes
  serial: true
  plan:

  - aggregate:
    - get: configuration
      trigger: true
      passed: [ upload-and-stage-product ]
      params:
        unpack: true
    - get: pcf-automation-image
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*image*"]
    - get: pcf-automation-tasks
      resource: pcf-automation
      params:
        unpack: true
        globs: ["*tasks*"]
    - get: pcf-automation-image-fixes

  - task: credhub-interpolate
    image: pcf-automation-image-fixes
    file: configuration/fixes/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: concourse_to_credhub
      CREDHUB_SECRET: ((concourse_to_credhub_secret))
      CREDHUB_SERVER: ((credhub_server))
      CREDHUB_CA_CERT: ((credhub_ca_cert.certificate))
      PREFIX: '/((foundation))-foundation'
      INTERPOLATION_PATH: "((foundation))/config"
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: configuration
      
  - task: apply-product-changes
    image: pcf-automation-image
    file: pcf-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: configuration
    params:
      ENV_FILE: ((foundation))/config/templates/env.yml
